문제 1 - SQL이란 무엇이며, 어떤 용도로 사용되나요?
  -> 데이터베이스를 관리하기 위한 언어. 데이터를 저장, 조회, 삭제할 수 있는 역할을 한다.

문제 2 - 관계형 데이터베이스(RDBMS)의 대표적인 예시 세 가지를 제시하세요.
  -> MySQL, Oracle, PostgreSQL

문제 3 - SQL과 NoSQL 데이터베이스의 주요 차이점 두 가지를 설명하세요.
  -> sql : 정해진 스키마 사용, 테이블 형태 저장
     NoSQL : 고정된 스키마 없음, 다양한 데이터 형식 지원

문제 4 - 다음 중 SQL의 기본 명령어에 해당하지 않는 것은 무엇인가요? d
  a) SELECT
  b) INSERT
  c) UPDATE
  d) DROP
  e) DELETE

문제 5 - SELECT 문에서 모든 컬럼을 조회하기 위한 와일드카드는 무엇인가요? *

문제 6 - 특정 조건에 맞는 데이터를 조회할 때 사용하는 절은 무엇인가요? where

문제 7 - AND, OR, NOT 연산자의 기능을 간단히 설명하세요.
  -> and :  조건이 모두 만족하는 행을 보여줌
      or : 여러 개의 조건 중 하나라도 만족하는 행을 보여줌
     not : 조건의 부정을 나타냄

문제 8 - 다음 SQL 문에서 사용된 연산자는 무엇이며, 어떤 기능을 하나요?
SELECT * FROM students WHERE name LIKE '김%';
  -> LIKE : 패턴 매칭을 위한 연산자. 이름이 '김'으로 시작하는 모든 사람을 보여준다.

문제 9 - 범위를 지정하여 데이터를 조회할 때 사용하는 연산자는 무엇인가요? 예시와 함께 설명하세요.
  -> BETWEEN

문제 10 - INSERT 문을 사용하여 여러 행을 한 번에 삽입하는 방법을 예시와 함께 설명하세요.
  -> INSERT INTO users(name,age) VALUES
      ('홍길동', 20),
      ('김길동', 30);

문제 11 - UPDATE 문을 사용하여 특정 조건의 데이터를 수정할 때 주의해야 할 점은 무엇인가요?
  -> 조건을 지정하지 않고 모든 행을 업데이트 시키는 것.
    ex) update users set age = 50;

문제 12 - DELETE 문과 TRUNCATE 문의 차이점을 설명하세요.
  -> delete 는 조건을 만족하는 행 데이터를 삭제하지만 TRUNCATE는 행 전체의 데이터를 지울 뿐 아니라 저장공간도 삭제한다.

문제 13 - GROUP BY 절의 기능과 함께 집계 함수를 사용하는 예시를 보여주세요.
  -> select grade, count(*) as '학생 수' from students group by grade;

문제 14 - INNER JOIN과 LEFT JOIN의 차이점을 설명하세요.
  -> INNER 조인은 양쪽 테이블에서 조건에 맞는 데이터만 조회하고, LEFT 조인은 왼쪽 테이블의 모든 데이터와 오른쪽 테이블의 일치하는 데이터를 조회한다.

문제 15 - 서브쿼리(Subquery)란 무엇이며, 어떤 상황에서 사용되나요?
  -> 쿼리 안에 또 다른 쿼리를 포함하는 것. 특정 단일 값이 필요할 때 사용됨.

문제 16 - 윈도우 함수(Window Function)의 목적과 예시를 설명하세요.
  -> 누적 합계를 구하거나, 순위를 부여하는 등을 위해 사용한다.


문제 17 - 테이블 생성 시 PRIMARY KEY와 FOREIGN KEY의 역할을 각각 설명하세요.
  -> PRIMARY KEY는 고유한 식별자를 말하고, FOREIGN KEY는 다른 테이블의 기본키를 참조하는 키를 말한다.

문제 18 - 트랜잭션(Transaction)이란 무엇이며, 어떤 특징을 가지나요?
  -> 데이터베이스 내에서 하나의 그룹으로 처리되어야 하는 명령을 모아놓은 작업 단위.
     특징 : 원자성, 일관성, 독립성, 영구성
           원자성(Atomicity) - 트랜적션이 데이터베이스에 모두 반영되거나, 아니면 전혀 반영되지 않아야 함.
           일관성(Consistency) - 트랜잭션의 작업 처리 결과가 항상 일관성이 있어야 함.
           독립성(Isolation) - 하나의 트랜잭션이 완료될 때까지, 다른 트랜잭션이 특정 트랜잭션의 결과를 참조할 수 없음.
           영구성(지속성, Durability) - 트랜잭션이 성공적으로 완료되었을 경우 결과는 영구적으로 반영되어야 함.

문제 19 - 사용자 계정을 생성하고 특정 권한을 부여하는 SQL 명령어를 작성하세요.
  -> CREATE USER 'username'@'localhost' IDENTIFIED BY 'password'; // 사용자 생성
     GRANT SELECT, INSERT ON 테이블명 TO 사용자명; // 권한 부여

문제 20 - SQL에서 데이터베이스의 성능을 향상시키기 위해 인덱스를 사용하는데, 인덱스의 장점과 단점을 각각 설명하세요.
  -> 장점 : 테이블을 검색하는 속도와 성능이 향상됨.
     단점 : 인덱스를 관리하기 위한 추가 작업이 필요.
           추가 저장 공간 필요
           잘못 사용하는 경우 검색 성능 저하 위험.

